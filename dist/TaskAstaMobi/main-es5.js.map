{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/formsdisplay/formsdisplay.component.ts","webpack:///src/app/formsdisplay/formsdisplay.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/service/api.service.ts","webpack:///src/service/auth.service.ts","webpack:///src/service/cookie.service.ts","webpack:///src/service/cookies-key.constant.ts","webpack:///src/service/globals.service.ts","webpack:///src/service/token.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","globalService","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthComponent","authService","apiService","cookieService","tokenService","timerRun","emailValidate","passwordValidate","getToken","authDataScenarioRef","event","email","target","value","validateEmail","password","length","re","test","emailIn","passwordIn","getAuthDataFromServer","subscribe","result","resultAuth","putAccessToken","access_token","loggedIn","startRefreshToken","refresh_in","error","alert","status","refreshTokenServer","clearTimeout","timerId","expires_in","authDataScenarioIn","authDataScenarioOut","destroyToken","timer","setInterval","undefined","FormsdisplayComponent","formsTransformTemp","currentPage","currentPaginationNumber","paginatorEnter","previousSearchValue","searchButton","searchOn","sortParam","submitPaginationButton","openFormChange","editCurrentFormLine","editData","form_field_values","form_field_id","getDataForms","token","get","formID","data","update","getAllDataRequest","formsData","formsTransform","JSON","parse","stringify","meta","page","per_page","mathService","begin","end","formsDisplay","slice","saveBeforeSort","newValue","sort","a","b","Date","created_at","currentSearchValue","Boolean","replace","i","forEach","element","element2","toLowerCase","search","push","disableSearch","abortSearchResults","pagesAtAll","Math","ceil","dataSlicer","idValue","confirm","lineID","editFormID","updateOneFormField","valueTime","document","getElementById","valueForm","create","environment","url","api_url","production","bootstrapModule","err","console","ApiService","http","platformId","isServer","headersFields","Accept","Authorization","path","params","ssr_api_url","headers","setRefreshHeaders","body","put","setHeaders","post","Object","AuthService","dataRequest","dataRefresh","CookieService","documentIsAccessible","name","escapedName","RegExp","definedName","encodeURIComponent","regExp","getCookieRegExp","exists","cookie","check","exec","decodeURIComponent","expires","domain","secure","cookieString","dateExpires","getTime","toUTCString","CookiesKey","GlobalsService","TokenService","val","ACCESS_TOKEN","remove"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { GlobalsService } from \"../service/globals.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(\n      public globalService: GlobalsService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n}\n\n","<app-auth></app-auth>\n<app-formsdisplay *ngIf=\"globalService.loggedIn\"></app-formsdisplay>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ApiService } from '../service/api.service';\n\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { GlobalsService } from '../service/globals.service';\nimport { ClickOutsideModule } from 'ng-click-outside';\nimport { CookieService } from '../service/cookie.service';\nimport { TokenService } from  '../service/token.service';\nimport { AuthComponent } from './auth/auth.component';\nimport { FormsdisplayComponent } from './formsdisplay/formsdisplay.component';\nimport { AuthService } from '../service/auth.service';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    FormsdisplayComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    ClickOutsideModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    ApiService,\n    HttpClient,\n    GlobalsService,\n    CookieService,\n    TokenService,\n    AuthService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from '../../service/cookie.service';\nimport { TokenService } from '../../service/token.service';\nimport { ApiService } from '../../service/api.service';\nimport { GlobalsService } from '../../service/globals.service';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\n\nexport class AuthComponent implements OnInit {\n\n  constructor(\n      private authService: AuthService,\n      private apiService: ApiService,\n      private cookieService: CookieService,\n      private tokenService: TokenService,\n      public globalService: GlobalsService,\n  ) { }\n\n  private timerId: any;\n  private timerRun: boolean = false;\n  public email: string;\n  public password: string;\n  public emailValidate: boolean = false;\n  public passwordValidate: boolean = false;\n  public resultAuth: any;\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken()) {\n      this.authDataScenarioRef();\n    }\n  }\n\n  onInputEmail(event: any) {\n    // @ts-ignore\n    this.email = event.target.value;\n    this.emailValidate = this.validateEmail(event.target.value);\n  }\n\n  onInputPassword(event: any) {\n    // @ts-ignore\n    this.password = event.target.value;\n    if (event.target.value.length >= 3) {\n      this.passwordValidate = true;\n    }\n    else {\n      this.passwordValidate = false;\n    }\n  }\n\n  validateEmail(email: string): boolean {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  authDataScenarioIn(emailIn: string, passwordIn: string) {\n    this.authService.getAuthDataFromServer(emailIn, passwordIn).subscribe((result: any) => {\n          this.resultAuth = result;\n          this.tokenService.putAccessToken(result.access_token);\n          this.globalService.loggedIn = true;\n          this.startRefreshToken(result.refresh_in);\n    }, (error => alert('Auth Log In error, code: ' + error.status))\n    );\n  }\n\n  authDataScenarioOut() {\n    this.authService.refreshTokenServer(this.tokenService.getToken()).subscribe((result: any) => {\n          clearTimeout(this.timerId);\n          this.globalService.loggedIn = false;\n        }, (error => alert('Auth Log Out error, code: ' + error.status))\n    );\n  }\n\n  authDataScenarioRef() {\n    this.authService.refreshTokenServer(this.tokenService.getToken()).subscribe((result: any) => {\n          this.resultAuth = result;\n          this.tokenService.putAccessToken(result.access_token);\n          this.globalService.loggedIn = true;\n          if (this.timerRun === false) {\n            this.startRefreshToken(result.expires_in);\n          }\n        },\n        (error => alert('Auth Refresh error, code: ' + error.status)),\n    );\n  }\n\n  loginByVal() {\n    this.authDataScenarioIn(this.email, this.password);\n  }\n\n  loginAuto() {\n    this.authDataScenarioIn('test14@test.com', '3edfhgfhjsdxdvf');\n  }\n\n  logOut() {\n    this.globalService.loggedIn = false;\n    this.authDataScenarioOut();\n    this.tokenService.destroyToken();\n    this.timerRun = false;\n  }\n\n  startRefreshToken(timer: number) {\n    this.timerId = setInterval(() => this.authDataScenarioRef(), timer);\n    this.timerRun = true;\n  }\n\n}\n","<div [ngClass]=\"['auth_box']\">\n    <div *ngIf=\"!globalService.loggedIn\">\n        <div [ngClass]=\"['row_r', 'rules', 'step']\">\n            <text [ngStyle]=\"{'margin-top':'7px'}\">\n                E-mail:\n            </text>\n            <input type=\"email\" (keyup)=\"onInputEmail($event)\">\n        </div>\n\n        <div [ngClass]=\"['row_r', 'rules', 'step']\">\n            <text [ngStyle]=\"{'margin-top':'7px'}\">\n                Pass:\n            </text>\n            <input type=\"text\" (keyup)=\"onInputPassword($event)\">\n        </div>\n    </div>\n\n    <div *ngIf=\"!globalService.loggedIn; else logoutBlock\">\n        <div [ngClass]=\"['row_r', 'rules']\">\n            <button\n                    [disabled]=\"!emailValidate || !passwordValidate\"\n                    (click)=\"loginByVal()\" id=\"submitInputData\">\n                Login\n            </button>\n<!--            <text [ngStyle]=\"{'margin-top':'7px'}\">-->\n<!--                or-->\n<!--            </text>-->\n<!--            <button (click)=\"loginAuto()\">-->\n<!--                Logauto-->\n<!--            </button>-->\n        </div>\n    </div>\n</div>\n\n<ng-template #logoutBlock>\n    <div [ngClass]=\"['row_r', 'rules', 'step']\">\n        <text [ngStyle]=\"{'margin-top':'7px'}\">\n            Logged as:\n        </text>\n    </div>\n    <div [ngClass]=\"['row_r', 'rules', 'step', 'move']\">\n        <span [ngClass]=\"['move']\">\n            {{resultAuth.user.name}}\n        </span>\n    </div>\n    <div [ngClass]=\"['row_r', 'rules']\">\n        <button\n            (click)=\"logOut()\"\n            [ngClass]=\"['warning']\">\n            Log Out\n        </button>\n    </div>\n</ng-template>\n\n\n","import { Component, OnInit} from '@angular/core';\nimport { CookieService } from '../../service/cookie.service';\nimport { TokenService } from '../../service/token.service';\nimport { ApiService } from '../../service/api.service';\nimport { GlobalsService } from '../../service/globals.service';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-formsdisplay',\n  templateUrl: './formsdisplay.component.html',\n  styleUrls: ['./formsdisplay.component.scss']\n})\nexport class FormsdisplayComponent implements OnInit {\n\n  public formsData: any;\n  public formsTransform: any;\n  public formsTransformTemp: any = undefined;\n  public formsDisplay: any;\n  public currentPage: number = undefined;\n  public currentPaginationNumber: number = undefined;\n  public paginatorEnter: number = this.currentPaginationNumber;\n  public pagesAtAll: number;\n  public currentSearchValue: string;\n  public previousSearchValue: string = undefined;\n  public searchButton = false;\n  public searchOn = false;\n  public sortParam: string = undefined;\n  public submitPaginationButton = false;\n  public openFormChange: string = undefined;\n  public editCurrentFormLine = false;\n  public editFormID: number;\n  public editData = {\n    form_field_values: [{\n        form_field_id: undefined,\n        value: undefined\n      }]\n    };\n\n  constructor(\n      private authService: AuthService,\n      private apiService: ApiService,\n      private cookieService: CookieService,\n      private tokenService: TokenService,\n      public globalService: GlobalsService,\n  ) { }\n\n  ngOnInit(): void {\n      this.getDataForms();\n  }\n\n  getAllDataRequest(token): any {\n    return this.apiService.get('/forms', token);\n  }\n\n  updateOneFormField(token, formID, data: any): any {\n    return this.apiService.update('/forms/' + formID, this.tokenService.getToken(), data).subscribe((result: any) => {\n      this.editCurrentFormLine = false;\n      this.getDataForms();\n        }, (error => alert('Forms Update Error, code: ' + error.status))\n    );\n  }\n\n  getDataForms(): any {\n    this.getAllDataRequest(this.tokenService.getToken()).subscribe((result: any) => {\n          this.formsData = result;\n          this.formsTransform = JSON.parse(JSON.stringify(result.data));\n          this.currentPage = result.meta.page;\n          this.currentPaginationNumber = result.meta.per_page;\n          this.mathService(this.formsTransform);\n        }, (error => alert('Forms Get Error, code: ' + error.status))\n    );\n  }\n\n  dataSlicer(data: any, begin: number, end: number): any {\n    this.formsDisplay = data.slice(begin, end);\n  }\n\n  submitPagination(): void {\n    if (this.paginatorEnter) {\n      this.currentPaginationNumber = this.paginatorEnter;\n    }\n    this.currentPage = 1;\n    this.mathService(this.formsTransform);\n    this.submitPaginationButton = false;\n  }\n\n  onInputPagination(event: any): void {\n    this.paginatorEnter = event.target.value;\n    if (this.currentPaginationNumber === event.target.value) {\n      this.submitPaginationButton = false;\n    } else {\n      this.submitPaginationButton = true;\n    }\n  }\n\n  goPrevPage(): void {\n    this.currentPage--;\n    this.mathService(this.formsTransform);\n  }\n\n  goNextPage(): void {\n    this.currentPage++;\n    this.mathService(this.formsTransform);\n  }\n\n  saveBeforeSort(): void {\n    this.formsTransformTemp = JSON.parse(JSON.stringify(this.formsTransform));\n  }\n\n  sortTimeUp(value: any): any {\n    if (this.formsTransformTemp === undefined) {\n      this.saveBeforeSort();\n    }\n    const newValue = value.sort((a, b) => {\n      return (new Date(b.created_at) as any) - (new Date(a.created_at) as any);\n    });\n    this.currentPage = 1;\n    this.mathService(newValue);\n    this.sortParam = 'up';\n  }\n\n  sortTimeDown(value: any): any {\n    if (this.formsTransformTemp === undefined) {\n      this.saveBeforeSort();\n    }\n    const newValue = value.sort((a, b) => {\n      return (new Date(a.created_at) as any) - (new Date(b.created_at) as any);\n    });\n    this.currentPage = 1;\n    this.mathService(newValue);\n    this.sortParam = 'down';\n  }\n\n  sortDisable(): any {\n    this.currentPage = 1;\n    this.mathService(this.formsTransformTemp);\n    this.sortParam = undefined;\n  }\n\n  onInputSearch(event: string): any {\n    // @ts-ignore\n    this.currentSearchValue = event.target.value;\n    if ((Boolean(this.currentSearchValue)) &&\n        ((this.currentSearchValue).replace(/\\s/g, '') !== '') &&\n        (this.currentSearchValue !== this.previousSearchValue)) {\n      this.searchButton = true;\n    } else {\n      this.searchButton = false;\n    }\n  }\n\n  abortSearchResults(): any {\n    this.formsTransform = JSON.parse(JSON.stringify(this.formsData.data));\n  }\n\n  submitSearch(): any {\n    this.previousSearchValue = this.currentSearchValue;\n    let i = 0;\n    this.formsTransform = [];\n    this.formsData.data.forEach(element => {\n      element.form_field_values.forEach(element2 => {\n        if (element2.value.toLowerCase().search(this.currentSearchValue.toLowerCase()) !== -1) {\n          this.formsTransform.push(this.formsData.data[i]);\n        }\n      });\n      i++;\n    });\n    this.searchOn = true;\n    if (this.formsTransform.length === 0) {\n      alert('No results for Searching');\n      this.disableSearch();\n    }\n    this.mathService(this.formsTransform);\n    this.searchButton = false;\n  }\n\n  disableSearch(): void {\n    this.abortSearchResults();\n    this.searchOn = false;\n    this.mathService(this.formsTransform);\n    this.currentSearchValue = undefined;\n    this.sortParam = undefined;\n    this.formsTransformTemp = undefined;\n  }\n\n  mathService(data: any): any {\n    this.pagesAtAll = Math.ceil(data.length / this.currentPaginationNumber);\n    this.dataSlicer(data,\n      ((this.currentPage - 1) * this.currentPaginationNumber),\n      (this.currentPage * this.currentPaginationNumber));\n  }\n\n  createNewForm(): void {\n    this.openFormChange = 'create';\n  }\n\n  deleteForm(idValue: number): any {\n    if (confirm('Delete form ID ' + idValue + ' ?')) {\n      return this.apiService.delete('/forms/' + idValue, this.tokenService.getToken()).subscribe((result: any) => {\n        this.getDataForms();\n          }, (error => alert('Forms Delete Error, code: ' + error.status))\n      );\n    }\n  }\n\n  editCurrentLine(formID: number, lineID: number, value: any) {\n    this.editCurrentFormLine = true;\n    this.editFormID = formID;\n    this.editData.form_field_values[0].form_field_id = lineID;\n    this.editData.form_field_values[0].value = value;\n  }\n\n  onInputFOrmLine(event: any): void {\n    // @ts-ignore\n    this.editData.form_field_values[0].value = event.target.value;\n  }\n\n  editFormLineAction(): any {\n    const data = this.formsTransform = JSON.parse(JSON.stringify(this.editData));\n    this.updateOneFormField(this.tokenService.getToken(), this.editFormID, data);\n  }\n\n  createNewFormRequest(): any {\n    const data: any = {\n      form_field_values: []\n    };\n    // @ts-ignore\n    const valueTime = document.getElementById('inputT').value;\n    for (let i = 1; i < 6; i++) {\n      // @ts-ignore\n      const valueForm = document.getElementById('input' + i).value;\n      if (valueForm) {\n        ((i === 4) && (valueTime)) ? data.form_field_values.push({form_field_id: i, value: valueForm + ' ' + valueTime}) : data.form_field_values.push({form_field_id: i, value: valueForm});\n      }\n    }\n    return this.apiService.create('/forms', this.tokenService.getToken(), data).subscribe((result: any) => {\n        this.openFormChange = undefined;\n        this.getDataForms();\n        }, (error => alert('Forms Create Error, code: ' + error.status))\n    );\n  }\n}\n","<div [ngClass]=\"['control_box']\" *ngIf=\"formsData && openFormChange === undefined\">\n    <div [ngClass]=\"['row', 'rules', 'step']\">\n        <button\n            (click)=\"createNewForm()\"\n            [ngClass]=\"['apply']\">\n            Create new form\n        </button>\n    </div>\n    <div [ngClass]=\"['row', 'rules', 'step']\">\n        <text [ngStyle]=\"{'margin-top':'9px'}\">\n            Search by value:\n        </text>\n        <input type=\"text\" value=\"{{currentSearchValue}}\" (keyup)=\"onInputSearch($event)\">\n        <button\n            [disabled]=\"searchButton === false\"\n            (click)=\"submitSearch()\">\n            Search\n        </button>\n        <button\n        [disabled]=\"!searchOn\"\n        (click)=\"disableSearch()\"\n        [ngClass]=\"['cancel']\">\n            Disable Search\n        </button>\n    </div>\n\n    <div [ngClass]=\"['row', 'rules', 'step']\">\n        <text [ngStyle]=\"{'margin-top':'9px'}\">\n            Sort elements by date of creation:\n        </text>\n        <br>\n        <button\n            [disabled]=\"sortParam === 'up'\"\n            (click)=\"sortTimeUp(formsTransform)\">\n            Sort Up\n        </button>\n        <button\n            [disabled]=\"sortParam === 'down'\"\n            (click)=\"sortTimeDown(formsTransform)\">\n            Sort Down\n        </button>\n        <button\n            [disabled]=\"sortParam === undefined\"\n            (click)=\"sortDisable()\"\n            [ngClass]=\"['cancel']\">\n            Disable Sorting\n        </button>\n    </div>\n\n        <div [ngClass]=\"['row', 'rules', 'step']\">\n            <text [ngStyle]=\"{'margin-top':'9px'}\">\n                Elements per page:\n            </text>\n            <input type=\"number\" value=\"{{currentPaginationNumber}}\" (keyup)=\"onInputPagination($event)\">\n            <button\n                [disabled]=\"submitPaginationButton === false\"\n                (click)=\"submitPagination()\">\n                Submit\n            </button>\n        </div>\n\n    <div [ngClass]=\"['row', 'rules']\">\n        <button\n            [disabled]=\"currentPage === 1\"\n            (click)=\"goPrevPage()\">\n            << Prev Page\n        </button>\n        <text [ngStyle]=\"{'margin-top':'9px'}\">\n            Page: <span>{{currentPage}}</span> of: {{pagesAtAll}}\n        </text>\n        <button\n            [disabled]=\"currentPage === pagesAtAll\"\n            (click)=\"goNextPage()\">\n            Next Page >>\n        </button>\n    </div>\n</div>\n\n<div *ngIf=\"formsData && openFormChange === undefined\">\n    <div\n        *ngFor=\"let form of formsDisplay\"\n        [ngClass]=\"['container', 'rules']\">\n            <div [ngClass]=\"['space']\">\n                <div [ngStyle]=\"{'margin-left':'13px'}\">\n                    <smalltext>\n                        Form ID: <span>{{form.id}}</span>\n                    </smalltext>\n                </div>\n\n                <div [ngStyle]=\"{'margin-right':'13px'}\">\n                    <smalltext>\n                        Created: <span>{{form.created_at | date:'dd.MM.yyyy'}}</span>\n                        at: <span>{{form.created_at | date:'hh:mm'}}</span>\n                    </smalltext>\n                    <smalltext>\n                        Updated: <span>{{form.updated_at | date:'dd.MM.yyyy'}}</span>\n                        at: <span>{{form.updated_at | date:'hh:mm'}}</span>\n                    </smalltext>\n                    <smalltext [ngStyle]=\"{'margin-right':'0px'}\">\n                        User ID: <span>{{form.user_id}}</span>\n                    </smalltext>\n                </div>\n            </div>\n\n            <div [ngClass]=\"['step']\">\n                <div *ngFor=\"let field of form.form_field_values\">\n                    <fieldscontainer>\n                        <field [ngClass]=\"['move']\"> {{field.value}} </field>\n                        <button\n                                [ngStyle]=\"{'margin-right': '0px'}\"\n                                [disabled]=\"editCurrentFormLine\"\n                                (click)=\"editCurrentLine(form.id, field.form_field_id, field.value)\">\n                            Edit\n                        </button>\n                    </fieldscontainer>\n                    <div *ngIf=\"editCurrentFormLine &&\n                        form.id === editFormID &&\n                        field.form_field_id === editData.form_field_values[0].form_field_id\">\n                        <input\n                            value={{this.editData.form_field_values[0].value}}\n                            (keyup)=\"onInputFOrmLine($event)\">\n                        <button\n                            (click)=\"editFormLineAction()\"\n                            [ngClass]=\"['apply']\">\n                            Submit\n                        </button>\n                        <button\n                        (click)=\"editCurrentFormLine = false\"\n                        [ngClass]=\"['cancel']\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n\n        <button\n            (click)=\"deleteForm(form.id)\"\n            [ngClass]=\"['warning']\">\n            Delete form\n        </button>\n    </div>\n</div>\n\n<div\n    *ngIf=\"openFormChange === 'create'\"\n    [ngClass]=\"['container', 'rules']\">\n    <div [ngClass]=\"['step']\">\n        <div [ngClass]=\"['step']\">\n            <smalltext>\n                <span>Create New Form</span>\n            </smalltext>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"text\" placeholder=\"Enter any string value\"\n                   id=\"input1\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : first field\n            </text>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"text\" placeholder=\"Enter any string value\"\n                   id=\"input2\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : second field:\n            </text>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"text\" placeholder=\"Enter any string value\"\n                   id=\"input3\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : third field\n            </text>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"date\" placeholder=\"Enter date only\"\n                   id=\"input4\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <input type=\"time\" placeholder=\"Enter date only\"\n                   id=\"inputT\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : fourth field\n            </text>\n        </div>\n        <div>\n            <input type=\"number\" placeholder=\"Enter numbers only\"\n                   id=\"input5\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : fifth field:\n            </text>\n        </div>\n    </div>\n\n    <button\n    [ngClass]=\"['apply']\"\n    (click)=\"createNewFormRequest()\">\n        Create\n    </button>\n    <button\n    (click)=\"openFormChange = undefined\"\n    [ngClass]=\"['cancel']\">\n        Cancel\n    </button>\n</div>\n\n","export const environment: any = {\n  url: 'test.s-group.vn.ua',\n  api_url: 'https://test.s-group.vn.ua/api/v1',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class ApiService {\n  private isServer: boolean;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(PLATFORM_ID) private platformId: Object) {\n    this.isServer = isPlatformServer(platformId);\n  }\n\n  private setHeaders(): HttpHeaders {\n    const headersFields: any = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    };\n    return new HttpHeaders(headersFields);\n  }\n\n  private setRefreshHeaders(token: string): HttpHeaders {\n    const headersFields: any = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    };\n    return new HttpHeaders(headersFields);\n  }\n\n  public get<T>(path: string, token: string, params: HttpParams = new HttpParams()): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.get<T>(`${url}${path}`, { headers: this.setRefreshHeaders(token)});\n  }\n\n  public put<T>(path: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.put<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n  }\n\n  public post<T>(path: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n  }\n\n  public delete(path: string, token: string): Observable<any> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.delete(`${url}${path}`, {headers: this.setRefreshHeaders(token)});\n  }\n\n  public dataRequest<T>(path: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, body);\n  }\n\n  public dataRefresh<T>(path: string, token: string): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, {},{headers: this.setRefreshHeaders(token)});\n  }\n\n  public update<T>(path: string, token: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setRefreshHeaders(token)});\n  }\n\n  public create<T>(path: string, token: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setRefreshHeaders(token)});\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\nimport { environment } from '../environments/environment';\nimport { ApiService } from './api.service';\nimport {CookieService} from \"./cookie.service\";\n\n\n@Injectable()\nexport class AuthService {\n    private isServer: boolean;\n\n    constructor(\n        private cookieService: CookieService,\n        private apiService: ApiService,\n        private http: HttpClient,\n        @Inject(PLATFORM_ID) private platformId: Object) {\n        this.isServer = isPlatformServer(platformId);\n    }\n\n    getAuthDataFromServer(emailIn: string, passwordIn: string) {\n        return this.apiService.dataRequest(`/auth/login`, {email: emailIn, password: passwordIn});\n    }\n\n    // tslint:disable-next-line:typedef\n    refreshTokenServer(token: string) {\n        return this.apiService.dataRefresh(`/auth/refresh`, token);\n    }\n\n    authLogOut(token: string) {\n        return this.apiService.dataRefresh(`/auth/logout`, token);\n    }\n\n    // private setHeaders(): HttpHeaders {\n    //     const headersFields: any = {\n    //         'Content-Type': 'application/json',\n    //         Accept: 'application/json',\n    //     };\n    //     return new HttpHeaders(headersFields);\n    // }\n    //\n    // private setRefreshHeaders(token: string): HttpHeaders {\n    //     const headersFields: any = {\n    //         Accept: 'application/json',\n    //         Authorization: `Bearer ${token}`,\n    //     };\n    //     return new HttpHeaders(headersFields);\n    // }\n    //\n    // public get<T>(path: string, params: HttpParams = new HttpParams()): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.get<T>(`${url}${path}`, { headers: this.setHeaders(), params });\n    // }\n    //\n    // // public getForms<T>(path: string, key: string): Observable<T> {\n    // //   const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    // //   return this.http.get<T>(`${url}${path}`, JSON.stringify(key));\n    // // }\n    //\n    // public put<T>(path: string, body: Object = {}): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.put<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n    // }\n    //\n    // public post<T>(path: string, body: Object = {}): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n    // }\n    //\n    // public delete(path: string): Observable<any> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.delete(`${url}${path}`, { headers: this.setHeaders() });\n    // }\n    //\n    // public dataRequest<T>(path: string, body: Object = {}): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.post<T>(`${url}${path}`, body);\n    // }\n    //\n    // public dataRefresh<T>(path: string, token: string): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.post<T>(`${url}${path}`, {},{ headers: this.setRefreshHeaders(token)});\n    // }\n\n\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class CookieService {\n  private document: any;\n\n  private documentIsAccessible: boolean = false;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (!isPlatformServer(platformId)) this.document = document;\n\n    this.documentIsAccessible = this.document !== undefined;\n  }\n\n  private getCookieRegExp(name): RegExp {\n    // eslint-disable-next-line no-useless-escape\n    const escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1');\n    return new RegExp(`(?:^${escapedName}|;\\\\s*${escapedName})=(.*?)(?:;|$)`, 'g');\n  }\n\n  private check(name: string): boolean {\n    if (!this.documentIsAccessible) {\n      return false;\n    }\n    const definedName = encodeURIComponent(name);\n    const regExp = this.getCookieRegExp(definedName);\n    const exists = regExp.test(this.document.cookie);\n    return exists;\n  }\n\n  public get(name: string): string {\n    if (this.documentIsAccessible && this.check(name)) {\n      const definedName = encodeURIComponent(name);\n      const regExp = this.getCookieRegExp(definedName);\n      const result = regExp.exec(this.document.cookie);\n      return decodeURIComponent(result[1]);\n    }\n\n    return '';\n  }\n\n  public put(name: string, value: string, expires?: number | Date, path?: string, domain?: string, secure?: boolean): void {\n    if (!this.documentIsAccessible) return;\n\n    let cookieString = `${encodeURIComponent(name)}=${encodeURIComponent(value)};`;\n    if (expires) {\n      if (typeof expires === 'number') {\n        const dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n        cookieString += `expires=${dateExpires.toUTCString()};`;\n      } else cookieString += `expires=${expires.toUTCString()};`;\n    }\n    if (path) cookieString += `path=${path};`;\n    if (domain) cookieString += `domain=${domain};`;\n    if (secure) cookieString += 'secure;';\n    this.document.cookie = cookieString;\n  }\n\n  public remove(name: string, path?: any, domain?: string): void {\n    if (!this.documentIsAccessible) {\n      return;\n    }\n    this.put(name, path, -1, path, domain);\n  }\n}\n","enum CookiesKey {\n  ACCESS_TOKEN = 'accessToken',\n}\n\nexport default CookiesKey;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GlobalsService {\n  loggedIn: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from './cookie.service';\nimport { environment } from '../environments/environment';\nimport CookiesKey from './cookies-key.constant';\n\n@Injectable()\nexport class TokenService {\n  constructor(private cookieService: CookieService) {\n  }\n\n  public putAccessToken(val: string): void {\n    return this.cookieService.put(CookiesKey.ACCESS_TOKEN, val);\n  }\n\n  public getToken(): string {\n    return this.cookieService.get(CookiesKey.ACCESS_TOKEN);\n  }\n\n  // public getSupportToken(): string {\n  //   return this.cookieService.get(CookiesKey.SUPPORT_TOKEN);\n  // }\n\n  // public destroySupportToken(): void {\n  //   this.cookieService.remove(CookiesKey.SUPPORT_TOKEN);\n  // }\n\n  public destroyToken(): void {\n    this.cookieService.remove(CookiesKey.ACCESS_TOKEN);\n  }\n\n  // public setSupportToken(token: string): void {\n  //   this.cookieService.put(CookiesKey.SUPPORT_TOKEN, token, 30, '/', environment.url);\n  // }\n}\n"]}