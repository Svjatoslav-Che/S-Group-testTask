{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/formsdisplay/formsdisplay.component.ts","./src/app/formsdisplay/formsdisplay.component.html","./src/environments/environment.ts","./src/main.ts","./src/service/api.service.ts","./src/service/auth.service.ts","./src/service/cookie.service.ts","./src/service/cookies-key.constant.ts","./src/service/globals.service.ts","./src/service/token.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { GlobalsService } from \"../service/globals.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(\n      public globalService: GlobalsService,\n  ) {}\n\n  ngOnInit(): void {\n  }\n}\n\n","<app-auth></app-auth>\n<app-formsdisplay *ngIf=\"globalService.loggedIn\"></app-formsdisplay>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ApiService } from '../service/api.service';\n\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { GlobalsService } from '../service/globals.service';\nimport { ClickOutsideModule } from 'ng-click-outside';\nimport { CookieService } from '../service/cookie.service';\nimport { TokenService } from  '../service/token.service';\nimport { AuthComponent } from './auth/auth.component';\nimport { FormsdisplayComponent } from './formsdisplay/formsdisplay.component';\nimport { AuthService } from '../service/auth.service';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    FormsdisplayComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    ClickOutsideModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    ApiService,\n    HttpClient,\n    GlobalsService,\n    CookieService,\n    TokenService,\n    AuthService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from '../../service/cookie.service';\nimport { TokenService } from '../../service/token.service';\nimport { ApiService } from '../../service/api.service';\nimport { GlobalsService } from '../../service/globals.service';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\n\nexport class AuthComponent implements OnInit {\n\n  constructor(\n      private authService: AuthService,\n      private apiService: ApiService,\n      private cookieService: CookieService,\n      private tokenService: TokenService,\n      public globalService: GlobalsService,\n  ) { }\n\n  private timerId: any;\n  private timerRun: boolean = false;\n  public email: string;\n  public password: string;\n  public emailValidate: boolean = false;\n  public passwordValidate: boolean = false;\n  public resultAuth: any;\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken()) {\n      this.authDataScenarioRef();\n    }\n  }\n\n  onInputEmail(event: any) {\n    // @ts-ignore\n    this.email = event.target.value;\n    this.emailValidate = this.validateEmail(event.target.value);\n  }\n\n  onInputPassword(event: any) {\n    // @ts-ignore\n    this.password = event.target.value;\n    if (event.target.value.length >= 3) {\n      this.passwordValidate = true;\n    }\n    else {\n      this.passwordValidate = false;\n    }\n  }\n\n  validateEmail(email: string): boolean {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  authDataScenarioIn(emailIn: string, passwordIn: string) {\n    this.authService.getAuthDataFromServer(emailIn, passwordIn).subscribe((result: any) => {\n          this.resultAuth = result;\n          this.tokenService.putAccessToken(result.access_token);\n          this.globalService.loggedIn = true;\n          this.startRefreshToken(result.refresh_in);\n    }, (error => alert('Auth Log In error, code: ' + error.status))\n    );\n  }\n\n  authDataScenarioOut() {\n    this.authService.refreshTokenServer(this.tokenService.getToken()).subscribe((result: any) => {\n          clearTimeout(this.timerId);\n          this.globalService.loggedIn = false;\n        }, (error => alert('Auth Log Out error, code: ' + error.status))\n    );\n  }\n\n  authDataScenarioRef() {\n    this.authService.refreshTokenServer(this.tokenService.getToken()).subscribe((result: any) => {\n          this.resultAuth = result;\n          this.tokenService.putAccessToken(result.access_token);\n          this.globalService.loggedIn = true;\n          if (this.timerRun === false) {\n            this.startRefreshToken(result.expires_in);\n          }\n        },\n        (error => alert('Auth Refresh error, code: ' + error.status)),\n    );\n  }\n\n  loginByVal() {\n    this.authDataScenarioIn(this.email, this.password);\n  }\n\n  loginAuto() {\n    this.authDataScenarioIn('test14@test.com', '3edfhgfhjsdxdvf');\n  }\n\n  logOut() {\n    this.globalService.loggedIn = false;\n    this.authDataScenarioOut();\n    this.tokenService.destroyToken();\n    this.timerRun = false;\n  }\n\n  startRefreshToken(timer: number) {\n    this.timerId = setInterval(() => this.authDataScenarioRef(), timer);\n    this.timerRun = true;\n  }\n\n}\n","<div [ngClass]=\"['auth_box']\">\n    <div *ngIf=\"!globalService.loggedIn\">\n        <div [ngClass]=\"['row_r', 'rules', 'step']\">\n            <text [ngStyle]=\"{'margin-top':'7px'}\">\n                E-mail:\n            </text>\n            <input type=\"email\" (keyup)=\"onInputEmail($event)\">\n        </div>\n\n        <div [ngClass]=\"['row_r', 'rules', 'step']\">\n            <text [ngStyle]=\"{'margin-top':'7px'}\">\n                Pass:\n            </text>\n            <input type=\"text\" (keyup)=\"onInputPassword($event)\">\n        </div>\n    </div>\n\n    <div *ngIf=\"!globalService.loggedIn; else logoutBlock\">\n        <div [ngClass]=\"['row_r', 'rules']\">\n            <button\n                    [disabled]=\"!emailValidate || !passwordValidate\"\n                    (click)=\"loginByVal()\" id=\"submitInputData\">\n                Login\n            </button>\n<!--            <text [ngStyle]=\"{'margin-top':'7px'}\">-->\n<!--                or-->\n<!--            </text>-->\n<!--            <button (click)=\"loginAuto()\">-->\n<!--                Logauto-->\n<!--            </button>-->\n        </div>\n    </div>\n</div>\n\n<ng-template #logoutBlock>\n    <div [ngClass]=\"['row_r', 'rules', 'step']\">\n        <text [ngStyle]=\"{'margin-top':'7px'}\">\n            Logged as:\n        </text>\n    </div>\n    <div [ngClass]=\"['row_r', 'rules', 'step', 'move']\">\n        <span [ngClass]=\"['move']\">\n            {{resultAuth.user.name}}\n        </span>\n    </div>\n    <div [ngClass]=\"['row_r', 'rules']\">\n        <button\n            (click)=\"logOut()\"\n            [ngClass]=\"['warning']\">\n            Log Out\n        </button>\n    </div>\n</ng-template>\n\n\n","import { Component, OnInit} from '@angular/core';\nimport { CookieService } from '../../service/cookie.service';\nimport { TokenService } from '../../service/token.service';\nimport { ApiService } from '../../service/api.service';\nimport { GlobalsService } from '../../service/globals.service';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-formsdisplay',\n  templateUrl: './formsdisplay.component.html',\n  styleUrls: ['./formsdisplay.component.scss']\n})\nexport class FormsdisplayComponent implements OnInit {\n\n  public formsData: any;\n  public formsTransform: any;\n  public formsTransformTemp: any = undefined;\n  public formsDisplay: any;\n  public currentPage: number = undefined;\n  public currentPaginationNumber: number = undefined;\n  public paginatorEnter: number = this.currentPaginationNumber;\n  public pagesAtAll: number;\n  public currentSearchValue: string;\n  public previousSearchValue: string = undefined;\n  public searchButton = false;\n  public searchOn = false;\n  public sortParam: string = undefined;\n  public submitPaginationButton = false;\n  public openFormChange: string = undefined;\n  public editCurrentFormLine = false;\n  public editFormID: number;\n  public editData = {\n    form_field_values: [{\n        form_field_id: undefined,\n        value: undefined\n      }]\n    };\n\n  constructor(\n      private authService: AuthService,\n      private apiService: ApiService,\n      private cookieService: CookieService,\n      private tokenService: TokenService,\n      public globalService: GlobalsService,\n  ) { }\n\n  ngOnInit(): void {\n      this.getDataForms();\n  }\n\n  getAllDataRequest(token): any {\n    return this.apiService.get('/forms', token);\n  }\n\n  updateOneFormField(token, formID, data: any): any {\n    return this.apiService.update('/forms/' + formID, this.tokenService.getToken(), data).subscribe((result: any) => {\n      this.editCurrentFormLine = false;\n      this.getDataForms();\n        }, (error => alert('Forms Update Error, code: ' + error.status))\n    );\n  }\n\n  getDataForms(): any {\n    this.getAllDataRequest(this.tokenService.getToken()).subscribe((result: any) => {\n          this.formsData = result;\n          this.formsTransform = JSON.parse(JSON.stringify(result.data));\n          this.currentPage = result.meta.page;\n          this.currentPaginationNumber = result.meta.per_page;\n          this.mathService(this.formsTransform);\n        }, (error => alert('Forms Get Error, code: ' + error.status))\n    );\n  }\n\n  dataSlicer(data: any, begin: number, end: number): any {\n    this.formsDisplay = data.slice(begin, end);\n  }\n\n  submitPagination(): void {\n    if (this.paginatorEnter) {\n      this.currentPaginationNumber = this.paginatorEnter;\n    }\n    this.currentPage = 1;\n    this.mathService(this.formsTransform);\n    this.submitPaginationButton = false;\n  }\n\n  onInputPagination(event: any): void {\n    this.paginatorEnter = event.target.value;\n    if (this.currentPaginationNumber === event.target.value) {\n      this.submitPaginationButton = false;\n    } else {\n      this.submitPaginationButton = true;\n    }\n  }\n\n  goPrevPage(): void {\n    this.currentPage--;\n    this.mathService(this.formsTransform);\n  }\n\n  goNextPage(): void {\n    this.currentPage++;\n    this.mathService(this.formsTransform);\n  }\n\n  saveBeforeSort(): void {\n    this.formsTransformTemp = JSON.parse(JSON.stringify(this.formsTransform));\n  }\n\n  sortTimeUp(value: any): any {\n    if (this.formsTransformTemp === undefined) {\n      this.saveBeforeSort();\n    }\n    const newValue = value.sort((a, b) => {\n      return (new Date(b.created_at) as any) - (new Date(a.created_at) as any);\n    });\n    this.currentPage = 1;\n    this.mathService(newValue);\n    this.sortParam = 'up';\n  }\n\n  sortTimeDown(value: any): any {\n    if (this.formsTransformTemp === undefined) {\n      this.saveBeforeSort();\n    }\n    const newValue = value.sort((a, b) => {\n      return (new Date(a.created_at) as any) - (new Date(b.created_at) as any);\n    });\n    this.currentPage = 1;\n    this.mathService(newValue);\n    this.sortParam = 'down';\n  }\n\n  sortDisable(): any {\n    this.currentPage = 1;\n    this.mathService(this.formsTransformTemp);\n    this.sortParam = undefined;\n  }\n\n  onInputSearch(event: string): any {\n    // @ts-ignore\n    this.currentSearchValue = event.target.value;\n    if ((Boolean(this.currentSearchValue)) &&\n        ((this.currentSearchValue).replace(/\\s/g, '') !== '') &&\n        (this.currentSearchValue !== this.previousSearchValue)) {\n      this.searchButton = true;\n    } else {\n      this.searchButton = false;\n    }\n  }\n\n  abortSearchResults(): any {\n    this.formsTransform = JSON.parse(JSON.stringify(this.formsData.data));\n  }\n\n  submitSearch(): any {\n    this.previousSearchValue = this.currentSearchValue;\n    let i = 0;\n    this.formsTransform = [];\n    this.formsData.data.forEach(element => {\n      element.form_field_values.forEach(element2 => {\n        if (element2.value.toLowerCase().search(this.currentSearchValue.toLowerCase()) !== -1) {\n          this.formsTransform.push(this.formsData.data[i]);\n        }\n      });\n      i++;\n    });\n    this.searchOn = true;\n    if (this.formsTransform.length === 0) {\n      alert('No results for Searching');\n      this.disableSearch();\n    }\n    this.mathService(this.formsTransform);\n    this.searchButton = false;\n  }\n\n  disableSearch(): void {\n    this.abortSearchResults();\n    this.searchOn = false;\n    this.mathService(this.formsTransform);\n    this.currentSearchValue = undefined;\n    this.sortParam = undefined;\n    this.formsTransformTemp = undefined;\n  }\n\n  mathService(data: any): any {\n    this.pagesAtAll = Math.ceil(data.length / this.currentPaginationNumber);\n    this.dataSlicer(data,\n      ((this.currentPage - 1) * this.currentPaginationNumber),\n      (this.currentPage * this.currentPaginationNumber));\n  }\n\n  createNewForm(): void {\n    this.openFormChange = 'create';\n  }\n\n  deleteForm(idValue: number): any {\n    if (confirm('Delete form ID ' + idValue + ' ?')) {\n      return this.apiService.delete('/forms/' + idValue, this.tokenService.getToken()).subscribe((result: any) => {\n        this.getDataForms();\n          }, (error => alert('Forms Delete Error, code: ' + error.status))\n      );\n    }\n  }\n\n  editCurrentLine(formID: number, lineID: number, value: any) {\n    this.editCurrentFormLine = true;\n    this.editFormID = formID;\n    this.editData.form_field_values[0].form_field_id = lineID;\n    this.editData.form_field_values[0].value = value;\n  }\n\n  onInputFOrmLine(event: any): void {\n    // @ts-ignore\n    this.editData.form_field_values[0].value = event.target.value;\n  }\n\n  editFormLineAction(): any {\n    const data = this.formsTransform = JSON.parse(JSON.stringify(this.editData));\n    this.updateOneFormField(this.tokenService.getToken(), this.editFormID, data);\n  }\n\n  createNewFormRequest(): any {\n    const data: any = {\n      form_field_values: []\n    };\n    // @ts-ignore\n    const valueTime = document.getElementById('inputT').value;\n    for (let i = 1; i < 6; i++) {\n      // @ts-ignore\n      const valueForm = document.getElementById('input' + i).value;\n      if (valueForm) {\n        ((i === 4) && (valueTime)) ? data.form_field_values.push({form_field_id: i, value: valueForm + ' ' + valueTime}) : data.form_field_values.push({form_field_id: i, value: valueForm});\n      }\n    }\n    return this.apiService.create('/forms', this.tokenService.getToken(), data).subscribe((result: any) => {\n        this.openFormChange = undefined;\n        this.getDataForms();\n        }, (error => alert('Forms Create Error, code: ' + error.status))\n    );\n  }\n}\n","<div [ngClass]=\"['control_box']\" *ngIf=\"formsData && openFormChange === undefined\">\n    <div [ngClass]=\"['row', 'rules', 'step']\">\n        <button\n            (click)=\"createNewForm()\"\n            [ngClass]=\"['apply']\">\n            Create new form\n        </button>\n    </div>\n    <div [ngClass]=\"['row', 'rules', 'step']\">\n        <text [ngStyle]=\"{'margin-top':'9px'}\">\n            Search by value:\n        </text>\n        <input type=\"text\" value=\"{{currentSearchValue}}\" (keyup)=\"onInputSearch($event)\">\n        <button\n            [disabled]=\"searchButton === false\"\n            (click)=\"submitSearch()\">\n            Search\n        </button>\n        <button\n        [disabled]=\"!searchOn\"\n        (click)=\"disableSearch()\"\n        [ngClass]=\"['cancel']\">\n            Disable Search\n        </button>\n    </div>\n\n    <div [ngClass]=\"['row', 'rules', 'step']\">\n        <text [ngStyle]=\"{'margin-top':'9px'}\">\n            Sort elements by date of creation:\n        </text>\n        <br>\n        <button\n            [disabled]=\"sortParam === 'up'\"\n            (click)=\"sortTimeUp(formsTransform)\">\n            Sort Up\n        </button>\n        <button\n            [disabled]=\"sortParam === 'down'\"\n            (click)=\"sortTimeDown(formsTransform)\">\n            Sort Down\n        </button>\n        <button\n            [disabled]=\"sortParam === undefined\"\n            (click)=\"sortDisable()\"\n            [ngClass]=\"['cancel']\">\n            Disable Sorting\n        </button>\n    </div>\n\n        <div [ngClass]=\"['row', 'rules', 'step']\">\n            <text [ngStyle]=\"{'margin-top':'9px'}\">\n                Elements per page:\n            </text>\n            <input type=\"number\" value=\"{{currentPaginationNumber}}\" (keyup)=\"onInputPagination($event)\">\n            <button\n                [disabled]=\"submitPaginationButton === false\"\n                (click)=\"submitPagination()\">\n                Submit\n            </button>\n        </div>\n\n    <div [ngClass]=\"['row', 'rules']\">\n        <button\n            [disabled]=\"currentPage === 1\"\n            (click)=\"goPrevPage()\">\n            << Prev Page\n        </button>\n        <text [ngStyle]=\"{'margin-top':'9px'}\">\n            Page: <span>{{currentPage}}</span> of: {{pagesAtAll}}\n        </text>\n        <button\n            [disabled]=\"currentPage === pagesAtAll\"\n            (click)=\"goNextPage()\">\n            Next Page >>\n        </button>\n    </div>\n</div>\n\n<div *ngIf=\"formsData && openFormChange === undefined\">\n    <div\n        *ngFor=\"let form of formsDisplay\"\n        [ngClass]=\"['container', 'rules']\">\n            <div [ngClass]=\"['space']\">\n                <div [ngStyle]=\"{'margin-left':'13px'}\">\n                    <smalltext>\n                        Form ID: <span>{{form.id}}</span>\n                    </smalltext>\n                </div>\n\n                <div [ngStyle]=\"{'margin-right':'13px'}\">\n                    <smalltext>\n                        Created: <span>{{form.created_at | date:'dd.MM.yyyy'}}</span>\n                        at: <span>{{form.created_at | date:'hh:mm'}}</span>\n                    </smalltext>\n                    <smalltext>\n                        Updated: <span>{{form.updated_at | date:'dd.MM.yyyy'}}</span>\n                        at: <span>{{form.updated_at | date:'hh:mm'}}</span>\n                    </smalltext>\n                    <smalltext [ngStyle]=\"{'margin-right':'0px'}\">\n                        User ID: <span>{{form.user_id}}</span>\n                    </smalltext>\n                </div>\n            </div>\n\n            <div [ngClass]=\"['step']\">\n                <div *ngFor=\"let field of form.form_field_values\">\n                    <fieldscontainer>\n                        <field [ngClass]=\"['move']\"> {{field.value}} </field>\n                        <button\n                                [ngStyle]=\"{'margin-right': '0px'}\"\n                                [disabled]=\"editCurrentFormLine\"\n                                (click)=\"editCurrentLine(form.id, field.form_field_id, field.value)\">\n                            Edit\n                        </button>\n                    </fieldscontainer>\n                    <div *ngIf=\"editCurrentFormLine &&\n                        form.id === editFormID &&\n                        field.form_field_id === editData.form_field_values[0].form_field_id\">\n                        <input\n                            value={{this.editData.form_field_values[0].value}}\n                            (keyup)=\"onInputFOrmLine($event)\">\n                        <button\n                            (click)=\"editFormLineAction()\"\n                            [ngClass]=\"['apply']\">\n                            Submit\n                        </button>\n                        <button\n                        (click)=\"editCurrentFormLine = false\"\n                        [ngClass]=\"['cancel']\">\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n\n        <button\n            (click)=\"deleteForm(form.id)\"\n            [ngClass]=\"['warning']\">\n            Delete form\n        </button>\n    </div>\n</div>\n\n<div\n    *ngIf=\"openFormChange === 'create'\"\n    [ngClass]=\"['container', 'rules']\">\n    <div [ngClass]=\"['step']\">\n        <div [ngClass]=\"['step']\">\n            <smalltext>\n                <span>Create New Form</span>\n            </smalltext>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"text\" placeholder=\"Enter any string value\"\n                   id=\"input1\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : first field\n            </text>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"text\" placeholder=\"Enter any string value\"\n                   id=\"input2\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : second field:\n            </text>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"text\" placeholder=\"Enter any string value\"\n                   id=\"input3\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : third field\n            </text>\n        </div>\n        <div [ngClass]=\"['step']\">\n            <input type=\"date\" placeholder=\"Enter date only\"\n                   id=\"input4\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <input type=\"time\" placeholder=\"Enter date only\"\n                   id=\"inputT\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : fourth field\n            </text>\n        </div>\n        <div>\n            <input type=\"number\" placeholder=\"Enter numbers only\"\n                   id=\"input5\"\n                   [ngStyle]=\"{'margin-right': '10px'}\">\n            <text>\n                : fifth field:\n            </text>\n        </div>\n    </div>\n\n    <button\n    [ngClass]=\"['apply']\"\n    (click)=\"createNewFormRequest()\">\n        Create\n    </button>\n    <button\n    (click)=\"openFormChange = undefined\"\n    [ngClass]=\"['cancel']\">\n        Cancel\n    </button>\n</div>\n\n","export const environment: any = {\n  url: 'test.s-group.vn.ua',\n  api_url: 'https://test.s-group.vn.ua/api/v1',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class ApiService {\n  private isServer: boolean;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(PLATFORM_ID) private platformId: Object) {\n    this.isServer = isPlatformServer(platformId);\n  }\n\n  private setHeaders(): HttpHeaders {\n    const headersFields: any = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    };\n    return new HttpHeaders(headersFields);\n  }\n\n  private setRefreshHeaders(token: string): HttpHeaders {\n    const headersFields: any = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n    };\n    return new HttpHeaders(headersFields);\n  }\n\n  public get<T>(path: string, token: string, params: HttpParams = new HttpParams()): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.get<T>(`${url}${path}`, { headers: this.setRefreshHeaders(token)});\n  }\n\n  public put<T>(path: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.put<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n  }\n\n  public post<T>(path: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n  }\n\n  public delete(path: string, token: string): Observable<any> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.delete(`${url}${path}`, {headers: this.setRefreshHeaders(token)});\n  }\n\n  public dataRequest<T>(path: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, body);\n  }\n\n  public dataRefresh<T>(path: string, token: string): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, {},{headers: this.setRefreshHeaders(token)});\n  }\n\n  public update<T>(path: string, token: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setRefreshHeaders(token)});\n  }\n\n  public create<T>(path: string, token: string, body: Object = {}): Observable<T> {\n    const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setRefreshHeaders(token)});\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { isPlatformServer } from '@angular/common';\nimport { environment } from '../environments/environment';\nimport { ApiService } from './api.service';\nimport {CookieService} from \"./cookie.service\";\n\n\n@Injectable()\nexport class AuthService {\n    private isServer: boolean;\n\n    constructor(\n        private cookieService: CookieService,\n        private apiService: ApiService,\n        private http: HttpClient,\n        @Inject(PLATFORM_ID) private platformId: Object) {\n        this.isServer = isPlatformServer(platformId);\n    }\n\n    getAuthDataFromServer(emailIn: string, passwordIn: string) {\n        return this.apiService.dataRequest(`/auth/login`, {email: emailIn, password: passwordIn});\n    }\n\n    // tslint:disable-next-line:typedef\n    refreshTokenServer(token: string) {\n        return this.apiService.dataRefresh(`/auth/refresh`, token);\n    }\n\n    authLogOut(token: string) {\n        return this.apiService.dataRefresh(`/auth/logout`, token);\n    }\n\n    // private setHeaders(): HttpHeaders {\n    //     const headersFields: any = {\n    //         'Content-Type': 'application/json',\n    //         Accept: 'application/json',\n    //     };\n    //     return new HttpHeaders(headersFields);\n    // }\n    //\n    // private setRefreshHeaders(token: string): HttpHeaders {\n    //     const headersFields: any = {\n    //         Accept: 'application/json',\n    //         Authorization: `Bearer ${token}`,\n    //     };\n    //     return new HttpHeaders(headersFields);\n    // }\n    //\n    // public get<T>(path: string, params: HttpParams = new HttpParams()): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.get<T>(`${url}${path}`, { headers: this.setHeaders(), params });\n    // }\n    //\n    // // public getForms<T>(path: string, key: string): Observable<T> {\n    // //   const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    // //   return this.http.get<T>(`${url}${path}`, JSON.stringify(key));\n    // // }\n    //\n    // public put<T>(path: string, body: Object = {}): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.put<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n    // }\n    //\n    // public post<T>(path: string, body: Object = {}): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.post<T>(`${url}${path}`, JSON.stringify(body), { headers: this.setHeaders() });\n    // }\n    //\n    // public delete(path: string): Observable<any> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.delete(`${url}${path}`, { headers: this.setHeaders() });\n    // }\n    //\n    // public dataRequest<T>(path: string, body: Object = {}): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.post<T>(`${url}${path}`, body);\n    // }\n    //\n    // public dataRefresh<T>(path: string, token: string): Observable<T> {\n    //     const url = this.isServer ? environment.ssr_api_url : environment.api_url;\n    //     return this.http.post<T>(`${url}${path}`, {},{ headers: this.setRefreshHeaders(token)});\n    // }\n\n\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class CookieService {\n  private document: any;\n\n  private documentIsAccessible: boolean = false;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (!isPlatformServer(platformId)) this.document = document;\n\n    this.documentIsAccessible = this.document !== undefined;\n  }\n\n  private getCookieRegExp(name): RegExp {\n    // eslint-disable-next-line no-useless-escape\n    const escapedName = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/ig, '\\\\$1');\n    return new RegExp(`(?:^${escapedName}|;\\\\s*${escapedName})=(.*?)(?:;|$)`, 'g');\n  }\n\n  private check(name: string): boolean {\n    if (!this.documentIsAccessible) {\n      return false;\n    }\n    const definedName = encodeURIComponent(name);\n    const regExp = this.getCookieRegExp(definedName);\n    const exists = regExp.test(this.document.cookie);\n    return exists;\n  }\n\n  public get(name: string): string {\n    if (this.documentIsAccessible && this.check(name)) {\n      const definedName = encodeURIComponent(name);\n      const regExp = this.getCookieRegExp(definedName);\n      const result = regExp.exec(this.document.cookie);\n      return decodeURIComponent(result[1]);\n    }\n\n    return '';\n  }\n\n  public put(name: string, value: string, expires?: number | Date, path?: string, domain?: string, secure?: boolean): void {\n    if (!this.documentIsAccessible) return;\n\n    let cookieString = `${encodeURIComponent(name)}=${encodeURIComponent(value)};`;\n    if (expires) {\n      if (typeof expires === 'number') {\n        const dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\n        cookieString += `expires=${dateExpires.toUTCString()};`;\n      } else cookieString += `expires=${expires.toUTCString()};`;\n    }\n    if (path) cookieString += `path=${path};`;\n    if (domain) cookieString += `domain=${domain};`;\n    if (secure) cookieString += 'secure;';\n    this.document.cookie = cookieString;\n  }\n\n  public remove(name: string, path?: any, domain?: string): void {\n    if (!this.documentIsAccessible) {\n      return;\n    }\n    this.put(name, path, -1, path, domain);\n  }\n}\n","enum CookiesKey {\n  ACCESS_TOKEN = 'accessToken',\n}\n\nexport default CookiesKey;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GlobalsService {\n  loggedIn: boolean = false;\n}\n","import { Injectable } from '@angular/core';\nimport { CookieService } from './cookie.service';\nimport { environment } from '../environments/environment';\nimport CookiesKey from './cookies-key.constant';\n\n@Injectable()\nexport class TokenService {\n  constructor(private cookieService: CookieService) {\n  }\n\n  public putAccessToken(val: string): void {\n    return this.cookieService.put(CookiesKey.ACCESS_TOKEN, val);\n  }\n\n  public getToken(): string {\n    return this.cookieService.get(CookiesKey.ACCESS_TOKEN);\n  }\n\n  // public getSupportToken(): string {\n  //   return this.cookieService.get(CookiesKey.SUPPORT_TOKEN);\n  // }\n\n  // public destroySupportToken(): void {\n  //   this.cookieService.remove(CookiesKey.SUPPORT_TOKEN);\n  // }\n\n  public destroyToken(): void {\n    this.cookieService.remove(CookiesKey.ACCESS_TOKEN);\n  }\n\n  // public setSupportToken(token: string): void {\n  //   this.cookieService.put(CookiesKey.SUPPORT_TOKEN, token, 30, '/', environment.url);\n  // }\n}\n"],"sourceRoot":"webpack:///"}